# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class CreateThreadRequest(Model):
    """CreateThreadRequest.

    All required parameters must be populated in order to send to Azure.

    :param topic: Required. The thread topic.
    :type topic: str
    :param is_sticky_thread: Flag if a thread is sticky - sticky thread has an
     immutable member list, members cannot be added or removed.
     Sticky threads are only supported for 1-1 chat, i.e. with only two
     members.
    :type is_sticky_thread: bool
    :param members: Required. Members to be added to the thread.
    :type members: list[~azure.communication.chat.models.ThreadMember]
    """

    _validation = {
        'topic': {'required': True},
        'members': {'required': True},
    }

    _attribute_map = {
        'topic': {'key': 'topic', 'type': 'str'},
        'is_sticky_thread': {'key': 'isStickyThread', 'type': 'bool'},
        'members': {'key': 'members', 'type': '[ThreadMember]'},
    }

    def __init__(self, **kwargs):
        super(CreateThreadRequest, self).__init__(**kwargs)
        self.topic = kwargs.get('topic', None)
        self.is_sticky_thread = kwargs.get('is_sticky_thread', None)
        self.members = kwargs.get('members', None)
