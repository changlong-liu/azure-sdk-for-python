# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class Message(Model):
    """Message.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    :ivar id: The id of the message. This id is server generated.
    :vartype id: str
    :param message_type: Type of the message.
     Possible values:
     - Text
     - ThreadActivity/TopicUpdate
     - ThreadActivity/AddMember
     - ThreadActivity/DeleteMember
    :type message_type: str
    :ivar client_message_id: The client message Id specified when the message
     was sent.
     This Id is a client-specific Id in a numeric unsigned Int64 format. It can
     be used for client deduping, among other client usages.
    :vartype client_message_id: str
    :param priority: Possible values include: 'Normal', 'High'
    :type priority: str or ~azure.communication.chat.models.MessagePriority
    :ivar version: Version of the message.
    :vartype version: str
    :param content: Content of the message.
    :type content: str
    :param sender_display_name: The display name of the message sender. This
     property is used to populate sender name for push notifications.
    :type sender_display_name: str
    :ivar original_arrival_time: The timestamp when the message arrived at the
     server. The timestamp is in ISO8601 format: `yyyy-MM-ddTHH:mm:ssZ`.
    :vartype original_arrival_time: datetime
    :ivar from_property: The Id of the message sender.
    :vartype from_property: str
    :param delete_time: The timestamp when the message was deleted in Unix
     time (epoch time) in milliseconds.
    :type delete_time: long
    :param edit_time: The timestamp when the message was edited in Unix time
     (epoch time) in milliseconds.
    :type edit_time: long
    """

    _validation = {
        'id': {'readonly': True},
        'client_message_id': {'readonly': True},
        'version': {'readonly': True},
        'original_arrival_time': {'readonly': True},
        'from_property': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'message_type': {'key': 'messageType', 'type': 'str'},
        'client_message_id': {'key': 'clientMessageId', 'type': 'str'},
        'priority': {'key': 'priority', 'type': 'str'},
        'version': {'key': 'version', 'type': 'str'},
        'content': {'key': 'content', 'type': 'str'},
        'sender_display_name': {'key': 'senderDisplayName', 'type': 'str'},
        'original_arrival_time': {'key': 'originalArrivalTime', 'type': 'iso-8601'},
        'from_property': {'key': 'from', 'type': 'str'},
        'delete_time': {'key': 'deleteTime', 'type': 'long'},
        'edit_time': {'key': 'editTime', 'type': 'long'},
    }

    def __init__(self, *, message_type: str=None, priority=None, content: str=None, sender_display_name: str=None, delete_time: int=None, edit_time: int=None, **kwargs) -> None:
        super(Message, self).__init__(**kwargs)
        self.id = None
        self.message_type = message_type
        self.client_message_id = None
        self.priority = priority
        self.version = None
        self.content = content
        self.sender_display_name = sender_display_name
        self.original_arrival_time = None
        self.from_property = None
        self.delete_time = delete_time
        self.edit_time = edit_time
