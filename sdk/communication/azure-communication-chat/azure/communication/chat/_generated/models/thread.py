# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class Thread(Model):
    """Thread.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    :ivar id: Thread id.
    :vartype id: str
    :param topic: Thread topic.
    :type topic: str
    :ivar created_at: Thread creation time in Unix time (epoch time) in
     milliseconds.
    :vartype created_at: str
    :ivar created_by: Id of the thread owner.
    :vartype created_by: str
    :param is_sticky_thread: Flag if a thread is sticky - sticky thread has an
     immutable member list, members cannot be added or removed.
    :type is_sticky_thread: bool
    :param members: Thread members.
    :type members: list[~azure.communication.chat.models.ThreadMember]
    """

    _validation = {
        'id': {'readonly': True},
        'created_at': {'readonly': True},
        'created_by': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'topic': {'key': 'topic', 'type': 'str'},
        'created_at': {'key': 'createdAt', 'type': 'str'},
        'created_by': {'key': 'createdBy', 'type': 'str'},
        'is_sticky_thread': {'key': 'isStickyThread', 'type': 'bool'},
        'members': {'key': 'members', 'type': '[ThreadMember]'},
    }

    def __init__(self, **kwargs):
        super(Thread, self).__init__(**kwargs)
        self.id = None
        self.topic = kwargs.get('topic', None)
        self.created_at = None
        self.created_by = None
        self.is_sticky_thread = kwargs.get('is_sticky_thread', None)
        self.members = kwargs.get('members', None)
