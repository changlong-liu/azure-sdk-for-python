{
  "swagger": "2.0",
  "info": {
    "title": "Azure Communication Chat Service",
    "description": "Azure Communication Chat Service",
    "contact": {
      "email": "acsdevexdisc@microsoft.com"
    },
    "version": "2020-09-21-preview2"
  },
  "paths": {
    "/chat/threads/{threadId}/readreceipts": {
      "get": {
        "tags": [
          "Conversations"
        ],
        "summary": "Gets read receipts for a thread.",
        "operationId": "ListReadReceipts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "threadId",
            "description": "Thread id to get the read receipts for.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The action returns the requested `ReadReceipt` resources.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReadReceipt"
              }
            }
          }
        },
        "x-ms-examples": {
          "Get thread read receipts": {
            "$ref": "./examples/Conversations_ListReadReceipts.json"
          }
        }
      },
      "post": {
        "tags": [
          "Conversations"
        ],
        "summary": "Posts a read receipt event to a thread, on behalf of a user.",
        "operationId": "SendReadReceipt",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "threadId",
            "description": "Id of the thread.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Request payload for sending a read receipt.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostReadReceiptRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Request successful."
          }
        },
        "x-ms-examples": {
          "Post read receipt": {
            "$ref": "./examples/Conversations_PostReadReceipt.json"
          }
        }
      }
    },
    "/chat/threads/{threadId}/messages": {
      "post": {
        "tags": [
          "Messages"
        ],
        "summary": "Sends a message to a thread.",
        "operationId": "SendMessage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "threadId",
            "description": "The thread id to send the message to.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Details of the message to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateMessageRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Message created, the `Location` header contains the URL for the newly created message.",
            "schema": {
              "$ref": "#/definitions/CreateMessageResponse"
            }
          }
        },
        "x-ms-examples": {
          "Send Message": {
            "$ref": "./examples/Messages_SendMessage.json"
          }
        }
      },
      "get": {
        "tags": [
          "Messages"
        ],
        "summary": "Gets a list of messages from a thread.",
        "operationId": "ListMessages",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "threadId",
            "description": "The thread id of the message.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "pageSize",
            "description": "The number of messages being requested.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "startTime",
            "description": "The start time where the range query. This is represented by number of seconds since epoch time.",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "syncState",
            "description": "The continuation token that previous request obtained. This is used for paging.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListMessagesResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get messages with pagination (Page Size)": {
            "$ref": "./examples/Messages_ListMessagesWithPageSize.json"
          },
          "Get messages with pagination (Sync State Token)": {
            "$ref": "./examples/Messages_ListMessagesWithSyncState.json"
          }
        }
      }
    },
    "/chat/threads/{threadId}/messages/{messageId}": {
      "get": {
        "tags": [
          "Messages"
        ],
        "summary": "Gets a message by id.",
        "operationId": "GetMessage",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "threadId",
            "description": "The thread id to which the message was sent.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "messageId",
            "description": "The message id.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The action returns a `Message` resource.",
            "schema": {
              "$ref": "#/definitions/Message"
            }
          }
        },
        "x-ms-examples": {
          "Get Message": {
            "$ref": "./examples/Messages_GetMessage.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Messages"
        ],
        "summary": "Updates a message.",
        "operationId": "UpdateMessage",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "threadId",
            "description": "The thread id to which the message was sent.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "messageId",
            "description": "The message id.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Details of the request to update the message.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateMessageRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Message is successfully updated."
          }
        },
        "x-ms-examples": {
          "Update message content": {
            "$ref": "./examples/Messages_UpdateMessage.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Messages"
        ],
        "summary": "Deletes a message.",
        "operationId": "DeleteMessage",
        "parameters": [
          {
            "in": "path",
            "name": "threadId",
            "description": "The thread id to which the message was sent.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "messageId",
            "description": "The message id.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Message is successfully deleted."
          }
        },
        "x-ms-examples": {
          "Delete message": {
            "$ref": "./examples/Messages_DeleteMessage.json"
          }
        }
      }
    },
    "/chat/threads/{threadId}/typing": {
      "post": {
        "tags": [
          "Messages"
        ],
        "summary": "Posts a typing event to a thread, on behalf of a user.",
        "operationId": "NotifyUserTyping",
        "parameters": [
          {
            "in": "path",
            "name": "threadId",
            "description": "Id of the thread.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful."
          }
        },
        "x-ms-examples": {
          "Post typing event to a thread": {
            "$ref": "./examples/Messages_PostTypingEvent.json"
          }
        }
      }
    },
    "/chat/threads/{threadId}/members": {
      "get": {
        "tags": [
          "ThreadMembers"
        ],
        "summary": "Gets the members of a thread.",
        "operationId": "ListThreadMembers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "threadId",
            "description": "Thread id to get members for.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The action returns the members of a thread.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ThreadMember"
              }
            }
          }
        },
        "x-ms-examples": {
          "Get thread members": {
            "$ref": "./examples/ThreadMembers_ListThreadMembers.json"
          }
        }
      },
      "post": {
        "tags": [
          "ThreadMembers"
        ],
        "summary": "Adds thread members to a thread. If members already exist, no change occurs.",
        "operationId": "AddThreadMembers",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "threadId",
            "description": "Id of the thread to add members to.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Thread members to be added to the thread.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddThreadMembersRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Request successful. The members identified by the request payload have been added to the thread."
          }
        },
        "x-ms-examples": {
          "Add thread members": {
            "$ref": "./examples/ThreadMembers_AddThreadMembers.json"
          }
        }
      }
    },
    "/chat/threads/{threadId}/members/{memberId}": {
      "delete": {
        "tags": [
          "ThreadMembers"
        ],
        "summary": "Remove a member from a thread.",
        "operationId": "RemoveThreadMember",
        "parameters": [
          {
            "in": "path",
            "name": "threadId",
            "description": "Thread id to remove the member from.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "memberId",
            "description": "Id of the thread member to remove from the thread.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The member has been removed from the thread."
          },
          "404": {
            "description": "Request unsuccessful. The member to be removed doesn't exist in the thread, or the thread doesn't exist.",
            "x-ms-error-response": true
          }
        },
        "x-ms-examples": {
          "Remove thread member": {
            "$ref": "./examples/ThreadMembers_RemoveThreadMember.json"
          }
        }
      }
    },
    "/chat/threads": {
      "post": {
        "tags": [
          "Threads"
        ],
        "summary": "Creates a chat thread.",
        "operationId": "CreateThread",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Request payload for creating a chat thread.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateThreadRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Thread created, the `Location` header contains the URL for the newly created thread.",
            "schema": {
              "$ref": "#/definitions/CreateThreadResponse"
            }
          }
        },
        "x-ms-examples": {
          "Group Chat": {
            "$ref": "./examples/Threads_CreateThread_Group.json"
          },
          "1 on 1 Chat": {
            "$ref": "./examples/Threads_CreateThread_Sticky.json"
          }
        }
      },
      "get": {
        "tags": [
          "Threads"
        ],
        "summary": "Gets the list of chat threads of a user.",
        "operationId": "ListThreads",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "pageSize",
            "description": "The number of threads being requested.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "startTime",
            "description": "The start time where the range query. This is represented by number of seconds since epoch time.",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "syncState",
            "description": "The continuation token that previous request obtained. This is used for paging.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The action returns a `GetThreadsResponse` resource.",
            "schema": {
              "$ref": "#/definitions/ListThreadsResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get threads with pagination (Page Size)": {
            "$ref": "./examples/Threads_ListThreadsWithPageSize.json"
          },
          "Get threads with pagination (Sync State Token)": {
            "$ref": "./examples/Threads_ListThreadsWithSyncState.json"
          }
        }
      }
    },
    "/chat/threads/{threadId}": {
      "patch": {
        "tags": [
          "Threads"
        ],
        "summary": "Updates a thread's properties.",
        "operationId": "UpdateThread",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "threadId",
            "description": "The id of the thread to update.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Request payload for updating a chat thread.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateThreadRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Thread was successfully updated."
          }
        },
        "x-ms-examples": {
          "Update Thread Topic": {
            "$ref": "./examples/Threads_UpdateThreadTopic.json"
          }
        }
      },
      "get": {
        "tags": [
          "Threads"
        ],
        "summary": "Gets a chat thread.",
        "operationId": "GetThread",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "threadId",
            "description": "Thread id to get.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The action returns a `Thread` resource.",
            "schema": {
              "$ref": "#/definitions/Thread"
            }
          }
        },
        "x-ms-examples": {
          "Get Thread": {
            "$ref": "./examples/Threads_GetThread.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Threads"
        ],
        "summary": "Deletes a thread.",
        "operationId": "DeleteThread",
        "parameters": [
          {
            "in": "path",
            "name": "threadId",
            "description": "Thread id to delete.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Request successful."
          }
        },
        "x-ms-examples": {
          "Delete Thread": {
            "$ref": "./examples/Threads_DeleteThread.json"
          }
        }
      }
    }
  },
  "definitions": {
    "ReadReceipt": {
      "type": "object",
      "properties": {
        "userId": {
          "description": "Read receipt sender id.",
          "type": "string",
          "readOnly": true,
          "example": "8:acs:8540c0de-899f-5cce-acb5-3ec493af3800_aabbcc-0011223344"
        },
        "messageId": {
          "description": "Id for the message that has been read. This id is server generated.",
          "type": "string",
          "readOnly": true,
          "example": "1591137790240"
        },
        "readTimestamp": {
          "format": "int64",
          "description": "Read receipt timestamp.",
          "type": "integer",
          "readOnly": true
        },
        "clientMessageId": {
          "description": "Client message id specified in the Microsoft.AzureCommunicationService.Gateway.Models.Client.CreateMessageRequest.\r\nThis Id is a client-specific Id in a numeric unsigned Int64 format. It can be used for client deduping, among other client usages.",
          "type": "string",
          "readOnly": true,
          "example": "1591137790240"
        }
      }
    },
    "PostReadReceiptRequest": {
      "required": [
        "clientMessageId",
        "messageId"
      ],
      "type": "object",
      "properties": {
        "clientMessageId": {
          "description": "The client message Id specified when the message was sent.\r\nThis Id is a client-specific Id in a numeric unsigned Int64 format. It can be used for client deduping, among other client usages.",
          "type": "string",
          "example": "18446744073709551615"
        },
        "messageId": {
          "description": "Id of the latest message read by current user.",
          "type": "string",
          "example": "1592435762364"
        }
      }
    },
    "MessagePriority": {
      "enum": [
        "Normal",
        "High"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "MessagePriority",
        "modelAsString": true
      }
    },
    "CreateMessageRequest": {
      "required": [
        "content"
      ],
      "type": "object",
      "properties": {
        "clientMessageId": {
          "description": "This Id is a client-specific Id in a numeric unsigned Int64 format. It can be used for client deduping, among other client usages.",
          "type": "string",
          "example": "18446744073709551615"
        },
        "priority": {
          "$ref": "#/definitions/MessagePriority"
        },
        "content": {
          "description": "Chat message content.",
          "type": "string",
          "example": "Come one guys, lets go for lunch together."
        },
        "senderDisplayName": {
          "description": "The display name of the message sender. This property is used to populate sender name for push notifications.",
          "type": "string",
          "example": "Bob Admin"
        }
      }
    },
    "CreateMessageResponse": {
      "type": "object",
      "properties": {
        "id": {
          "description": "The Id of the message. This Id is server generated.",
          "type": "string",
          "readOnly": true,
          "example": "123456789"
        },
        "clientMessageId": {
          "description": "This Id is a client-specific Id in a numeric unsigned Int64 format. It can be used for client deduping, among other client usages.",
          "type": "string",
          "readOnly": true,
          "example": "18446744073709551615"
        }
      }
    },
    "Message": {
      "type": "object",
      "properties": {
        "id": {
          "description": "The id of the message. This id is server generated.",
          "type": "string",
          "readOnly": true,
          "example": "123456789"
        },
        "messageType": {
          "description": "Type of the message.\r\n            \r\nPossible values:\r\n    - Text\r\n    - ThreadActivity/TopicUpdate\r\n    - ThreadActivity/AddMember\r\n    - ThreadActivity/DeleteMember",
          "type": "string",
          "example": "Text"
        },
        "clientMessageId": {
          "description": "The client message Id specified when the message was sent.\r\nThis Id is a client-specific Id in a numeric unsigned Int64 format. It can be used for client deduping, among other client usages.",
          "type": "string",
          "readOnly": true,
          "example": "18446744073709551615"
        },
        "priority": {
          "$ref": "#/definitions/MessagePriority"
        },
        "version": {
          "description": "Version of the message.",
          "type": "string",
          "readOnly": true
        },
        "content": {
          "description": "Content of the message.",
          "type": "string",
          "example": "Come one guys, lets go for lunch together."
        },
        "senderDisplayName": {
          "description": "The display name of the message sender. This property is used to populate sender name for push notifications.",
          "type": "string",
          "example": "Jane"
        },
        "originalArrivalTime": {
          "format": "date-time",
          "description": "The timestamp when the message arrived at the server. The timestamp is in ISO8601 format: `yyyy-MM-ddTHH:mm:ssZ`.",
          "type": "string",
          "readOnly": true,
          "example": "2020-06-06T05:55:41.6460000Z"
        },
        "from": {
          "description": "The Id of the message sender.",
          "type": "string",
          "readOnly": true,
          "example": "8:acs:8540c0de-899f-5cce-acb5-3ec493af3800_aabbcc-0011223344"
        },
        "deleteTime": {
          "format": "int64",
          "description": "The timestamp when the message was deleted in Unix time (epoch time) in milliseconds.",
          "type": "integer",
          "example": 1591142858100
        },
        "editTime": {
          "format": "int64",
          "description": "The timestamp when the message was edited in Unix time (epoch time) in milliseconds.",
          "type": "integer",
          "example": 1591142858100
        }
      }
    },
    "ListMessagesResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "description": "List of messages.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          },
          "readOnly": true
        },
        "syncState": {
          "description": "Continuation link to get new and modified messages.",
          "type": "string",
          "readOnly": true
        },
        "backwardLink": {
          "description": "If there are more messages that can be retrieved, the backward link will be populated.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "UpdateMessageRequest": {
      "type": "object",
      "properties": {
        "content": {
          "description": "Chat message content.",
          "type": "string",
          "example": "Let's go for lunch together."
        }
      }
    },
    "MemberRole": {
      "description": "Role of the thread member. The valid value should be \"User\" or \"Admin\".",
      "enum": [
        "Admin",
        "User"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "MemberRole",
        "modelAsString": true
      }
    },
    "ThreadMember": {
      "description": "A member of the thread.",
      "required": [
        "id",
        "memberRole"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "The id of the thread member in the format `8:acs:ResourceId_AcsUserId`.",
          "type": "string",
          "example": "8:acs:8540c0de-899f-5cce-acb5-3ec493af3800_aabbcc-0011223344"
        },
        "displayName": {
          "description": "Display name for the thread member.",
          "type": "string",
          "example": "Bob"
        },
        "memberRole": {
          "$ref": "#/definitions/MemberRole"
        },
        "shareHistoryTime": {
          "description": "Time from which the group chat history is shared with the member in EPOCH time (milliseconds).\r\n            \r\nPossible values:\r\n - `0` which means share everything\r\n - `-1` which means share nothing\r\n - `1594691284031` which is epoch time equivalent to 7/14/2020 1:48:04 AM +00:00",
          "type": "string",
          "example": "0"
        }
      }
    },
    "AddThreadMembersRequest": {
      "required": [
        "members"
      ],
      "type": "object",
      "properties": {
        "members": {
          "description": "Members to add to a thread.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ThreadMember"
          }
        }
      }
    },
    "CreateThreadRequest": {
      "required": [
        "members",
        "topic"
      ],
      "type": "object",
      "properties": {
        "topic": {
          "description": "The thread topic.",
          "type": "string",
          "example": "Lunch Thread"
        },
        "isStickyThread": {
          "description": "Flag if a thread is sticky - sticky thread has an immutable member list, members cannot be added or removed.\r\nSticky threads are only supported for 1-1 chat, i.e. with only two members.",
          "type": "boolean",
          "example": false
        },
        "members": {
          "description": "Members to be added to the thread.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ThreadMember"
          }
        }
      }
    },
    "CreateThreadResponse": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Thread Id.",
          "type": "string",
          "readOnly": true,
          "example": "19:uni01_uy5ucb66ugp3lrhe7pxso6xx4hsmm3dl6eyjfefv2n6x3rrurpea@thread.v2"
        }
      }
    },
    "ThreadInfo": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Thread id.",
          "type": "string",
          "readOnly": true,
          "example": "19:uni01_uy5ucb66ugp3lrhe7pxso6xx4hsmm3dl6eyjfefv2n6x3rrurpea@thread.v2"
        },
        "topic": {
          "description": "Thread topic.",
          "type": "string",
          "example": "Lunch Thread"
        },
        "isDeleted": {
          "description": "Flag if a thread is soft deleted.",
          "type": "boolean",
          "example": false
        },
        "lastMessageReceivedTime": {
          "format": "date-time",
          "description": "The timestamp when the last message arrived at the server. The timestamp is in ISO8601 format: `yyyy-MM-ddTHH:mm:ssZ`.",
          "type": "string",
          "readOnly": true,
          "example": "2020-06-06T05:55:41.6460000Z"
        }
      }
    },
    "ListThreadsResponse": {
      "type": "object",
      "properties": {
        "threads": {
          "description": "List of threads.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ThreadInfo"
          },
          "readOnly": true
        },
        "syncState": {
          "description": "Continuation link to get new and modified threads.",
          "type": "string",
          "readOnly": true
        },
        "backwardLink": {
          "description": "If there are more threads that can be retrieved, the backward link will be populated.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "UpdateThreadRequest": {
      "type": "object",
      "properties": {
        "topic": {
          "description": "Thread topic.",
          "type": "string",
          "example": "Lunch Thread"
        }
      }
    },
    "Thread": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Thread id.",
          "type": "string",
          "readOnly": true,
          "example": "19:uni01_uy5ucb66ugp3lrhe7pxso6xx4hsmm3dl6eyjfefv2n6x3rrurpea@thread.v2"
        },
        "topic": {
          "description": "Thread topic.",
          "type": "string",
          "example": "Lunch Thread"
        },
        "createdAt": {
          "description": "Thread creation time in Unix time (epoch time) in milliseconds.",
          "type": "string",
          "readOnly": true,
          "example": "1591142858245"
        },
        "createdBy": {
          "description": "Id of the thread owner.",
          "type": "string",
          "readOnly": true,
          "example": "8:acs:8540c0de-899f-5cce-acb5-3ec493af3800_aabbcc-0011223344"
        },
        "isStickyThread": {
          "description": "Flag if a thread is sticky - sticky thread has an immutable member list, members cannot be added or removed.",
          "type": "boolean",
          "example": false
        },
        "members": {
          "description": "Thread members.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ThreadMember"
          }
        }
      }
    }
  },
  "parameters": {
    "ApiVersionParameter": {
      "in": "query",
      "name": "api-version",
      "description": "Version of API to invoke.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "Endpoint": {
      "in": "path",
      "name": "endpoint",
      "description": "The endpoint of the Azure Communication resource.",
      "required": true,
      "type": "string",
      "x-ms-skip-url-encoding": true,
      "x-ms-parameter-location": "client"
    }
  },
  "securityDefinitions": {
    "Authorization": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "An ACS (Azure Communication Services) user access token."
    }
  },
  "security": [
    {
      "Authorization": [ ]
    }
  ],
  "x-ms-parameterized-host": {
    "hostTemplate": "{endpoint}",
    "useSchemePrefix": false,
    "parameters": [
      {
        "$ref": "#/parameters/Endpoint"
      }
    ]
  }
}