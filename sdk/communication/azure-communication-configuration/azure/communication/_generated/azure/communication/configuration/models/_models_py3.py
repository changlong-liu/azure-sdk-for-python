# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class TokenRequest(Model):
    """TokenRequest.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar scopes:
    :vartype scopes: list[str]
    :param identity: Required.
    :type identity: str
    """

    _validation = {
        'scopes': {'readonly': True},
        'identity': {'required': True},
    }

    _attribute_map = {
        'scopes': {'key': 'Scopes', 'type': '[str]'},
        'identity': {'key': 'Identity', 'type': 'str'},
    }

    def __init__(self, *, identity: str, **kwargs) -> None:
        super(TokenRequest, self).__init__(**kwargs)
        self.scopes = None
        self.identity = identity


class TokenResponse(Model):
    """TokenResponse.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    :ivar tag:
    :vartype tag: str
    :ivar token:
    :vartype token: str
    :ivar expires_in:
    :vartype expires_in: int
    """

    _validation = {
        'tag': {'readonly': True},
        'token': {'readonly': True},
        'expires_in': {'readonly': True},
    }

    _attribute_map = {
        'tag': {'key': 'tag', 'type': 'str'},
        'token': {'key': 'token', 'type': 'str'},
        'expires_in': {'key': 'expiresIn', 'type': 'int'},
    }

    def __init__(self, **kwargs) -> None:
        super(TokenResponse, self).__init__(**kwargs)
        self.tag = None
        self.token = None
        self.expires_in = None
