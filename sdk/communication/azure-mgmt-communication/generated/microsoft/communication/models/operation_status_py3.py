# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class OperationStatus(Model):
    """The current status of an async operation.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    :ivar id: Fully qualified ID for the operationstatus.
    :vartype id: str
    :ivar status: Provisioning state of the resource. Possible values include:
     'Succeeded', 'Failed', 'Canceled', 'Creating', 'Deleting', 'Moving'
    :vartype status: str or ~microsoft.communication.models.Status
    :ivar start_time: The start time of the operation
    :vartype start_time: datetime
    :ivar end_time: The end time of the operation
    :vartype end_time: datetime
    :ivar percent_complete: Percent of the operation that is complete
    :vartype percent_complete: float
    :param error: The error
    :type error: ~microsoft.communication.models.ErrorResponseError
    """

    _validation = {
        'id': {'readonly': True},
        'status': {'readonly': True},
        'start_time': {'readonly': True},
        'end_time': {'readonly': True},
        'percent_complete': {'readonly': True, 'maximum': 100, 'minimum': 0},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'status': {'key': 'status', 'type': 'str'},
        'start_time': {'key': 'startTime', 'type': 'iso-8601'},
        'end_time': {'key': 'endTime', 'type': 'iso-8601'},
        'percent_complete': {'key': 'percentComplete', 'type': 'float'},
        'error': {'key': 'error.error', 'type': 'ErrorResponseError'},
    }

    def __init__(self, *, error=None, **kwargs) -> None:
        super(OperationStatus, self).__init__(**kwargs)
        self.id = None
        self.status = None
        self.start_time = None
        self.end_time = None
        self.percent_complete = None
        self.error = error
